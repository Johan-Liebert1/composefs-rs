Update sha with the external (not digest) data first
Then update sha with the padding
Then take the digest of the data and do stuff
Then flush the inline data first, writing out all the inline data and replacing the inline data with padding
Then write the digest. Do not add the digest to the writer


# multiple workers
messages are received out of order and produce non deterministic SHA and verity

Workers in thread pool

Spwan, say 5 threads, 3 of which are `ensure_object` and 2 is the `encoder`, more like in 3:1 ratio (have to figure out how to sync these though)

Probably can pass the entire SplitStreamWriter to the `encoder` thread.
In the encoder thread, use corssbeam select to have something like Go's for { select {} }, this is because we'll have different receivers for different


Problem 1

How and where to spawn these threads

Can't spawn them at the moment we see an external object, as that's kinda weird tbh

Option 1: Spawn them at the top of `Oci::Pull`


Problem 2

How to figure out how many threads to spawn and how many of them are external object writers and how many will be zstd writers.

Option 1: Have them in a 1:3 (zstd writers: object writers) ratio
