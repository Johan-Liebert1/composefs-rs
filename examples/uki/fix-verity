#!/bin/sh

# workaround for https://github.com/tytso/e2fsprogs/issues/201

set -eux

# We use a custom UKI with an initramfs containing a script that remounts
# /sysroot read-write and enables fs-verity on all of the objects in
# /composefs/objects.
#
# The first time we're run (or if we are modified) we (re-)generate the UKI.
# This is done inside of a container (for independence from the host OS).

image_file="$1"

if [ "$0" -nt fix-verity.efi ]; then
    podman run --rm -i fedora > tmp/fix-verity.efi <<'EOF'
    set -eux

    cat > /tmp/fix-verity.sh <<'EOS'
    mount -o remount,rw /sysroot
    (
      cd /sysroot/composefs/objects
      echo >&2 'Enabling fsverity on composefs objects'
      for i in */*; do
          fsverity enable $i;
      done
      echo >&2 'done!'
    )
    umount /sysroot
    sync
    poweroff -ff
EOS

    (
      dnf --setopt keepcache=1 install -y \
        kernel binutils systemd-boot-unsigned btrfs-progs fsverity-utils
      dracut \
        --uefi \
        --no-hostonly \
        --install 'sync fsverity' \
        --include /tmp/fix-verity.sh /lib/dracut/hooks/pre-pivot/fix-verity.sh \
        --kver "$(rpm -q kernel-core --qf '%{VERSION}-%{RELEASE}.%{ARCH}')" \
        --kernel-cmdline="root=PARTLABEL=root-x86-64 console=ttyS0" \
        /tmp/fix-verity.efi
    ) >&2

    cat /tmp/fix-verity.efi
EOF
    mv tmp/fix-verity.efi fix-verity.efi
fi

qemu-system-x86_64 \
    -nographic \
    -m 4096 \
    -enable-kvm \
    -bios /usr/share/edk2/ovmf/OVMF_CODE.fd \
    -drive file="$1",if=virtio,media=disk \
    -kernel fix-verity.efi
